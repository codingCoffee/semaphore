/* eslint-disable */
/* tslint:disable */
// noinspection JSUnusedGlobalSymbols
// biome-ignore-all
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero. ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## Additionally, you should also exclude this file from   ##
 * ## your linter and/or formatter to prevent it from being  ##
 * ## checked or modified.                                   ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/0xcadams/drizzle-zero        ##
 * ------------------------------------------------------------
 */

import type { DrizzleToZeroSchema, ZeroCustomType } from "drizzle-zero";
import type * as drizzleSchema from "./db/schema";

import {
  ANYONE_CAN,
  ANYONE_CAN_DO_ANYTHING,
  definePermissions,
  PermissionsConfig,
  ExpressionBuilder,
} from "@rocicorp/zero";

type ZeroSchema = DrizzleToZeroSchema<typeof drizzleSchema>;

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    accounts: {
      name: "accounts",
      columns: {
        id: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "accounts",
            "id"
          >,
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "accounts",
            "userId"
          >,
        },
        type: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "accounts",
            "type"
          >,
        },
        provider: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "accounts",
            "provider"
          >,
        },
        providerAccountId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "accounts",
            "providerAccountId"
          >,
        },
        refresh_token: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "accounts",
            "refresh_token"
          >,
        },
        access_token: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "accounts",
            "access_token"
          >,
        },
        expires_at: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "accounts",
            "expires_at"
          >,
        },
        token_type: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "accounts",
            "token_type"
          >,
        },
        scope: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "accounts",
            "scope"
          >,
        },
        id_token: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "accounts",
            "id_token"
          >,
        },
        session_state: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "accounts",
            "session_state"
          >,
        },
      },
      primaryKey: ["id"],
      serverName: "account",
    },
    authenticators: {
      name: "authenticators",
      columns: {
        id: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "authenticators",
            "id"
          >,
        },
        credentialID: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "authenticators",
            "credentialID"
          >,
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "authenticators",
            "userId"
          >,
        },
        providerAccountId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "authenticators",
            "providerAccountId"
          >,
        },
        credentialPublicKey: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "authenticators",
            "credentialPublicKey"
          >,
        },
        counter: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "authenticators",
            "counter"
          >,
        },
        credentialDeviceType: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "authenticators",
            "credentialDeviceType"
          >,
        },
        credentialBackedUp: {
          type: "boolean",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "authenticators",
            "credentialBackedUp"
          >,
        },
        transports: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "authenticators",
            "transports"
          >,
        },
      },
      primaryKey: ["id"],
      serverName: "authenticator",
    },
    chats: {
      name: "chats",
      columns: {
        id: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "chats",
            "id"
          >,
        },
        title: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "chats",
            "title"
          >,
        },
        isPublic: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "chats",
            "isPublic"
          >,
          serverName: "is_public",
        },
        createdBy: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "chats",
            "createdBy"
          >,
        },
        deletedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "chats",
            "deletedAt"
          >,
          serverName: "deleted_at",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "chats",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "chats",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "chat",
    },
    llmResponses: {
      name: "llmResponses",
      columns: {
        id: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "llmResponses",
            "id"
          >,
        },
        chatId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "llmResponses",
            "chatId"
          >,
          serverName: "chat_id",
        },
        llm: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "llmResponses",
            "llm"
          >,
        },
        question: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "llmResponses",
            "question"
          >,
        },
        answer: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "llmResponses",
            "answer"
          >,
        },
        isPending: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "llmResponses",
            "isPending"
          >,
          serverName: "is_pending",
        },
        createdBy: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "llmResponses",
            "createdBy"
          >,
          serverName: "created_by",
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "llmResponses",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "llmResponses",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "llmResponse",
    },
    sessions: {
      name: "sessions",
      columns: {
        sessionToken: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "sessions",
            "sessionToken"
          >,
        },
        userId: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "sessions",
            "userId"
          >,
        },
        expires: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "sessions",
            "expires"
          >,
        },
      },
      primaryKey: ["sessionToken"],
      serverName: "session",
    },
    users: {
      name: "users",
      columns: {
        id: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "name"
          >,
        },
        email: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "email"
          >,
        },
        emailVerified: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "emailVerified"
          >,
        },
        image: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "image"
          >,
        },
        username: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "username"
          >,
        },
        hashedPassword: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "hashedPassword"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "createdAt"
          >,
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "updatedAt"
          >,
        },
      },
      primaryKey: ["id"],
      serverName: "user",
    },
    verificationTokens: {
      name: "verificationTokens",
      columns: {
        id: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verificationTokens",
            "id"
          >,
        },
        identifier: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verificationTokens",
            "identifier"
          >,
        },
        token: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verificationTokens",
            "token"
          >,
        },
        expires: {
          type: "number",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "verificationTokens",
            "expires"
          >,
        },
      },
      primaryKey: ["id"],
      serverName: "verificationToken",
    },
  },
  relationships: {},
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;

type AuthData = {
  // The logged-in user.
  sub: string;
};
export const permissions = definePermissions<AuthData, Schema>(schema, () => {
  const allowIfChatCreator = (
    authData: AuthData,
    { cmp }: ExpressionBuilder<Schema, "chats">,
  ) => cmp("createdBy", authData.sub);

  return {
    users: ANYONE_CAN_DO_ANYTHING,
    llmResponses: ANYONE_CAN_DO_ANYTHING,
    chats: ANYONE_CAN_DO_ANYTHING,
    // chats: {
    //   row: {
    //     select: [allowIfChatCreator],
    //   },
    // },
  } satisfies PermissionsConfig<AuthData, Schema>;
});
