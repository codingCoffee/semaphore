services:
  frontend:
    image: codingcoffee/semaphore
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "127.0.0.1:3000:3000"
    env_file:
      - ./frontend/.nextjs.env

  zero-cache:
    image: codingcoffee/semaphore-zero-cache
    build:
      context: ./frontend
      dockerfile: Dockerfile.zero-cache
    restart: unless-stopped
    ports:
      - "127.0.0.1:4848:4848"
    env_file:
      - ./frontend/.zero-cache.env
    depends_on:
      - postgres

  whodb:
    image: clidey/whodb:0.55.0
    restart: unless-stopped
    env_file:
      - ./frontend/.whodb.env
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      - postgres

  postgres:
    image: postgres:16.2-alpine
    shm_size: 1g
    restart: unless-stopped
    healthcheck:
      test: "pg_isready -U semaphore --dbname=semaphore"
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./frontend/.postgres.env
    command: |
      postgres
      -c wal_level=logical
      -c max_wal_senders=10
      -c max_replication_slots=5
      -c hot_standby=on
      -c hot_standby_feedback=on
    volumes:
      - ./postgres-data:/var/lib/postgresql/data/pgdata
